{"version":3,"file":"component---src-templates-post-jsx-e8cb1bd1d5ec7035fef6.js","mappings":"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","sources":["webpack://lellowmellow-blog/./src/components/MarkdownWrapper/MarkdownStyler/index.jsx","webpack://lellowmellow-blog/./src/components/MarkdownWrapper/PrismStyler/LightMode.jsx","webpack://lellowmellow-blog/./src/components/MarkdownWrapper/PrismStyler/BaseMode.jsx","webpack://lellowmellow-blog/./src/components/MarkdownWrapper/PrismStyler/DarkMode.jsx","webpack://lellowmellow-blog/./src/components/MarkdownWrapper/PrismStyler/index.jsx","webpack://lellowmellow-blog/./src/components/MarkdownWrapper/index.jsx","webpack://lellowmellow-blog/./src/components/PostLinks/index.jsx","webpack://lellowmellow-blog/./src/components/TableOfContents/TocBar/TocDetail/index.jsx","webpack://lellowmellow-blog/./src/components/TableOfContents/TocBar/TocMin/index.jsx","webpack://lellowmellow-blog/./src/components/TableOfContents/TocBar/index.jsx","webpack://lellowmellow-blog/./src/components/TableOfContents/TocCallout/index.jsx","webpack://lellowmellow-blog/./src/components/TableOfContents/index.jsx","webpack://lellowmellow-blog/./src/templates/post.jsx"],"sourcesContent":["import styled from \"styled-components\"\r\n\r\nexport const MarkdownStyler = styled.section`\r\n  // General styling for all elements inside the MarkdownStyler\r\n  * {\r\n    line-height: 1.5;\r\n    color: ${props => props.theme.text};\r\n  }\r\n\r\n  // Strong (bold) text styling\r\n  strong {\r\n    font-weight: 600 !important;\r\n  }\r\n\r\n  // Blockquote styling\r\n  blockquote {\r\n    width: 100%;\r\n    height: fit-content;\r\n    margin: 0.25rem 0;\r\n    padding: 0 1rem;\r\n    overflow: hidden;\r\n    border-left: 0.188rem solid ${props => props.theme.text};\r\n    * {\r\n      padding: 0 0.125rem;\r\n    }\r\n    blockquote {\r\n      padding: 0 1rem;\r\n      margin: 0.188rem 0;\r\n    }\r\n  }\r\n\r\n  // Paragraph styling\r\n  p {\r\n    padding: 0.188rem 0.125rem;\r\n    margin: 0.125rem 0 0.0625rem 0;\r\n    margin-top: 0.0625rem;\r\n    font-size: 1rem;\r\n  }\r\n\r\n  // Anchor (link) styling\r\n  a {\r\n    padding: 0.188rem 0.125rem;\r\n    margin: 0.125rem 0 0.0625rem 0;\r\n    margin-bottom: 0.125rem;\r\n    padding-bottom: 0;\r\n    border-bottom: ${props => props.theme.mdAnchorBorder};\r\n    opacity: 0.7;\r\n  }\r\n\r\n  // Emphasized (italic) text styling\r\n  em {\r\n    font-style: italic !important;\r\n  }\r\n\r\n  // Deleted (strikethrough) text styling\r\n  del {\r\n    text-decoration: line-through;\r\n  }\r\n\r\n  // Horizontal rule (divider) styling\r\n  hr {\r\n    width: 100%;\r\n    margin: 0.438rem 0;\r\n    height: 0.0625rem;\r\n    padding: 0;\r\n    border: none;\r\n    border-bottom: ${props => props.theme.mdHrBorder};\r\n  }\r\n\r\n  // Headings (h1 - h6) styling\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  h5,\r\n  h6 {\r\n    padding: 0.188rem 0.125rem;\r\n    margin: 0.125rem 0 0.0625rem 0;\r\n    white-space: pre-wrap;\r\n    word-break: break-word;\r\n    font-weight: 600;\r\n    line-height: 1.3;\r\n  }\r\n\r\n  // Specific heading level styling\r\n  h1 {\r\n    margin-top: 2rem;\r\n    margin-bottom: 0.25rem;\r\n    font-size: 1.875rem;\r\n  }\r\n\r\n  h2 {\r\n    margin-top: 1.375rem;\r\n    margin-bottom: 0.063rem;\r\n    font-size: 1.5rem;\r\n  }\r\n\r\n  h3,\r\n  h4,\r\n  h5,\r\n  h6 {\r\n    margin-top: 1rem;\r\n    margin-bottom: 0.063rem;\r\n    font-size: 1.25rem;\r\n  }\r\n\r\n  // Unordered list (ul) styling\r\n  ul {\r\n    width: 100%;\r\n    list-style: disc;\r\n    margin: 0;\r\n    padding: 0;\r\n    padding-left: 1.625rem;\r\n\r\n    // Nested unordered lists with different list styles\r\n    ::marker {\r\n      font-size: 18px;\r\n    }\r\n    ul {\r\n      list-style: circle;\r\n      ul {\r\n        list-style: square;\r\n        ul {\r\n          list-style: disc;\r\n          ul {\r\n            list-style: circle;\r\n            ul {\r\n              list-style: square;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // List item (li) styling\r\n  li {\r\n    margin: 0.125rem 0 0.0625rem 0;\r\n    padding: 0.188rem 0.125rem;\r\n    display: list-item;\r\n    height: fit-content;\r\n    list-style-position: outside;\r\n  }\r\n\r\n  // Ordered list (ol) styling\r\n  ol {\r\n    margin: 0;\r\n    padding: 0;\r\n    padding-left: 1.625rem;\r\n    list-style: decimal;\r\n    height: fit-content;\r\n    ::marker {\r\n      font-size: inherit;\r\n    }\r\n  }\r\n\r\n  // Task list (checklist) specific styling\r\n  .contains-task-list,\r\n  .task-list-item {\r\n    padding: 0.188rem 0.125rem;\r\n    margin: 0.125rem 0 0.0625rem 0;\r\n    list-style: none;\r\n    padding-left: 0;\r\n  }\r\n\r\n  // Checkbox styling\r\n  ul > li input[type=\"checkbox\"] {\r\n    padding: 0.188rem 0.125rem;\r\n    appearance: none;\r\n    -webkit-appearance: none;\r\n    width: 1rem;\r\n    height: 1rem;\r\n    border-radius: 0;\r\n    border: 0.125rem solid ${props => props.theme.text};\r\n    position: relative;\r\n    margin: 0 0.25rem 0.188rem 0.375rem;\r\n    vertical-align: middle;\r\n  }\r\n\r\n  // Checked checkbox styling\r\n  .task-list-item input[type=\"checkbox\"]:checked {\r\n    background-color: ${props => props.theme.blue};\r\n    border: 0.125rem solid ${props => props.theme.blue};\r\n  }\r\n\r\n  // Checked checkbox tick mark\r\n  .task-list-item input[type=\"checkbox\"]:checked::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0.2rem;\r\n    width: 0.313rem;\r\n    height: 0.563rem;\r\n    border: solid white;\r\n    border-width: 0 0.125rem 0.125rem 0;\r\n    transform: rotate(45deg);\r\n  }\r\n\r\n  // Strikethrough text when checkbox is checked\r\n  .task-list-item input[type=\"checkbox\"]:checked ~ * {\r\n    text-decoration: line-through;\r\n  }\r\n\r\n  // Additional styling for checked task list items\r\n  .task-list-item:has(input[type=\"checkbox\"]:checked) {\r\n    text-decoration: line-through ${props => props.theme.mdCheckboxTextline};\r\n    color: ${props => props.theme.weekText};\r\n\r\n    & > * {\r\n      text-decoration: none;\r\n    }\r\n  }\r\n\r\n  // Table styling\r\n  table {\r\n    width: 100vw;\r\n    max-width: 100%;\r\n    border-collapse: collapse;\r\n    font-size: 0.875rem;\r\n    text-align: left;\r\n    padding: 0.188rem 0.125rem;\r\n    margin: 0.5rem 0 1.125rem 0;\r\n    display: block;\r\n    overflow-x: auto;\r\n  }\r\n\r\n  // Table elements (tr, th, td, thead, tbody) reset\r\n  tr,\r\n  th,\r\n  td,\r\n  thead,\r\n  tbody {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  // Table header (th) and data cell (td) styling\r\n  th,\r\n  td {\r\n    padding: 0.438rem 0.563rem;\r\n    border: 0.0625rem solid ${props => props.theme.mdTableBorder};\r\n    min-width: 7.5rem;\r\n    word-wrap: break-word;\r\n    word-break: break-all;\r\n  }\r\n\r\n  // Table header (th) specific styling\r\n  th {\r\n    background: ${props => props.theme.mdTableThBackground};\r\n    font-weight: 600;\r\n  }\r\n\r\n  // Image styling\r\n  img {\r\n    padding: 0;\r\n    margin: 0.25rem auto;\r\n    border-radius: 0.125rem;\r\n    max-width: 100%;\r\n    background-color: ${props => props.theme.background};\r\n  }\r\n\r\n  .gatsby-resp-image-wrapper {\r\n    margin: 0 !important;\r\n  }\r\n\r\n  .gatsby-resp-image-link {\r\n    margin-bottom: none;\r\n    border: none;\r\n    opacity: 1;\r\n  }\r\n\r\n  .gatsby-resp-image-figcaption {\r\n    white-space: pre-wrap;\r\n    word-break: break-word;\r\n    font-size: 0.875rem;\r\n    color: ${props => props.theme.weekText};\r\n    margin: 0 !important;\r\n    padding: 0.375rem 0 0.375rem 0.125rem;\r\n  }\r\n\r\n  .autolinkHeader {\r\n    opacity: 0;\r\n  }\r\n\r\n  .footnote-ref {\r\n    font-size: 0.75rem;\r\n    margin-left: 0.25rem;\r\n  }\r\n\r\n  // code block margin\r\n  .gatsby-highlight {\r\n    margin: 0.25rem 0;\r\n  }\r\n\r\n  // katex block\r\n  .math-display {\r\n    margin: 0.25rem 0;\r\n    padding: 0.25rem 0.5rem;\r\n    border-radius: 0.25rem;\r\n    &:hover {\r\n      background-color: ${props => props.theme.buttonHover};\r\n    }\r\n  }\r\n\r\n  .katex-mathml {\r\n    display: none;\r\n  }\r\n\r\n  .math .katex-html {\r\n    white-space: pre-line;\r\n  }\r\n`\r\n","import { createGlobalStyle, css } from \"styled-components\"\r\n\r\nconst LightTheme = css`\r\n  /**\r\n * prism.js default theme for JavaScript, CSS and HTML\r\n * Based on dabblet (http://dabblet.com)\r\n * @author Lea Verou\r\n */\r\n\r\n  code[class*=\"language-\"],\r\n  pre[class*=\"language-\"] {\r\n    color: #37352f;\r\n    background: none;\r\n  }\r\n\r\n  @media print {\r\n    code[class*=\"language-\"],\r\n    pre[class*=\"language-\"] {\r\n      text-shadow: none;\r\n    }\r\n  }\r\n\r\n  pre[class*=\"language-\"] {\r\n    background: rgb(247, 246, 243);\r\n  }\r\n\r\n  .token.comment,\r\n  .token.prolog,\r\n  .token.doctype,\r\n  .token.cdata {\r\n    color: slategray;\r\n  }\r\n\r\n  .token.punctuation {\r\n    color: #999;\r\n  }\r\n\r\n  .token.namespace {\r\n    opacity: 0.7;\r\n  }\r\n\r\n  .token.property,\r\n  .token.tag,\r\n  .token.boolean,\r\n  .token.number,\r\n  .token.constant,\r\n  .token.symbol,\r\n  .token.deleted {\r\n    color: #905;\r\n  }\r\n\r\n  .token.selector,\r\n  .token.attr-name,\r\n  .token.string,\r\n  .token.char,\r\n  .token.builtin,\r\n  .token.inserted {\r\n    color: #690;\r\n  }\r\n\r\n  .token.operator,\r\n  .token.entity,\r\n  .token.url,\r\n  .language-css .token.string,\r\n  .style .token.string {\r\n    color: #9a6e3a;\r\n    background: hsla(0, 0%, 100%, 0.5);\r\n  }\r\n\r\n  .token.atrule,\r\n  .token.attr-value,\r\n  .token.keyword {\r\n    color: #07a;\r\n  }\r\n\r\n  .token.function,\r\n  .token.class-name {\r\n    color: #dd4a68;\r\n  }\r\n\r\n  .token.regex,\r\n  .token.important,\r\n  .token.variable {\r\n    color: #e90;\r\n  }\r\n`\r\n\r\nconst LightMode = createGlobalStyle`\r\n    ${LightTheme}\r\n`\r\n\r\nexport default LightMode\r\n","import { createGlobalStyle, css } from \"styled-components\"\r\n\r\nconst BaseTheme = css`\r\n  code[class*=\"language-\"],\r\n  pre[class*=\"language-\"] {\r\n    font-family: \"SFMono-Regular\", Menlo, Consolas, \"PT Mono\", \"Liberation Mono\",\r\n      Courier, monospace !important;\r\n    font-size: 0.85rem;\r\n    text-align: left;\r\n    white-space: pre;\r\n    word-spacing: normal;\r\n    word-break: normal;\r\n    word-wrap: normal;\r\n    line-height: 1.5;\r\n\r\n    -moz-tab-size: 2;\r\n    -o-tab-size: 2;\r\n    tab-size: 2;\r\n\r\n    -webkit-hyphens: none;\r\n    -moz-hyphens: none;\r\n    -ms-hyphens: none;\r\n    hyphens: none;\r\n\r\n    * {\r\n      margin: 0;\r\n      padding: 0;\r\n      font-family: \"SFMono-Regular\", Menlo, Consolas, \"PT Mono\",\r\n        \"Liberation Mono\", Courier, monospace !important;\r\n    }\r\n  }\r\n\r\n  pre[class*=\"language-\"] {\r\n    padding: 34px 16px 32px 32px;\r\n    border-radius: 0.25rem;\r\n    min-height: 1rem;\r\n    margin: 0;\r\n    overflow: auto;\r\n  }\r\n\r\n  :not(pre) > code {\r\n    padding: 0.2rem 0.4rem !important;\r\n    background: ${props => props.theme.mdInlineCodeBackground};\r\n    border-radius: 0.25rem;\r\n    color: ${props => props.theme.red} !important;\r\n    font-size: 85%;\r\n  }\r\n\r\n  .token.italic {\r\n    font-style: italic;\r\n  }\r\n\r\n  .token.entity {\r\n    cursor: help;\r\n  }\r\n`\r\n\r\nconst BaseMode = createGlobalStyle`\r\n    ${BaseTheme}\r\n`\r\n\r\nexport default BaseMode\r\n","import { createGlobalStyle, css } from \"styled-components\"\r\n\r\nconst DarkTheme = css`\r\n  /**\r\n* prism.js tomorrow night eighties for JavaScript, CoffeeScript, CSS and HTML\r\n* Based on https://github.com/chriskempson/tomorrow-theme\r\n* @author Rose Pritchard\r\n*/\r\n\r\n  code[class*=\"language-\"],\r\n  pre[class*=\"language-\"] {\r\n    color: #ffffffcf;\r\n    background: none;\r\n  }\r\n\r\n  pre[class*=\"language-\"] {\r\n    background: rgba(255, 255, 255, 0.03);\r\n  }\r\n\r\n  .token.comment,\r\n  .token.block-comment,\r\n  .token.prolog,\r\n  .token.doctype,\r\n  .token.cdata {\r\n    color: #999;\r\n  }\r\n\r\n  .token.punctuation {\r\n    color: #ccc;\r\n  }\r\n\r\n  .token.tag,\r\n  .token.attr-name,\r\n  .token.namespace,\r\n  .token.deleted {\r\n    color: #e2777a;\r\n  }\r\n\r\n  .token.function-name {\r\n    color: #6196cc;\r\n  }\r\n\r\n  .token.boolean,\r\n  .token.number,\r\n  .token.function {\r\n    color: #f08d49;\r\n  }\r\n\r\n  .token.property,\r\n  .token.class-name,\r\n  .token.constant,\r\n  .token.symbol {\r\n    color: #f8c555;\r\n  }\r\n\r\n  .token.selector,\r\n  .token.important,\r\n  .token.atrule,\r\n  .token.keyword,\r\n  .token.builtin {\r\n    color: #cc99cd;\r\n  }\r\n\r\n  .token.string,\r\n  .token.char,\r\n  .token.attr-value,\r\n  .token.regex,\r\n  .token.variable {\r\n    color: #7ec699;\r\n  }\r\n\r\n  .token.operator,\r\n  .token.entity,\r\n  .token.url {\r\n    color: #67cdcc;\r\n  }\r\n\r\n  .token.inserted {\r\n    color: green;\r\n  }\r\n`\r\n\r\nconst DarkMode = createGlobalStyle`\r\n    ${DarkTheme}\r\n`\r\n\r\nexport default DarkMode\r\n","import React, { useContext } from \"react\"\r\nimport { ThemeContext } from \"../../../contexts/ThemeContext\"\r\nimport LightMode from \"./LightMode\"\r\nimport BaseMode from \"./BaseMode\"\r\nimport DarkMode from \"./DarkMode\"\r\n\r\nconst PrismStyler = () => {\r\n  const context = useContext(ThemeContext)\r\n  const { ThemeMode } = context\r\n\r\n  return (\r\n    <>\r\n      <BaseMode />\r\n      {ThemeMode === \"light\" ? <LightMode /> : <DarkMode />}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PrismStyler\r\n","import React from \"react\"\r\nimport { MarkdownStyler } from \"./MarkdownStyler\"\r\nimport PrismStyler from \"./PrismStyler\"\r\n\r\nconst MarkdownWrapper = ({ html }) => {\r\n  return (\r\n    <>\r\n      <PrismStyler />\r\n      <MarkdownStyler\r\n        className=\"markdown\"\r\n        dangerouslySetInnerHTML={{ __html: html }}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MarkdownWrapper\r\n","import React, { useContext } from \"react\"\r\nimport styled, { css } from \"styled-components\"\r\nimport Icon from \"../Icon\"\r\nimport { navigate } from \"gatsby\"\r\nimport { MobileContext } from \"../../contexts/MobileContext\"\r\nimport { NavContext } from \"../../contexts/NavContext\"\r\n\r\nconst PostLinksWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  gap: 1rem;\r\n  margin-top: 2rem;\r\n  ${props =>\r\n    props.$isNavFixed &&\r\n    !props.$isMobile &&\r\n    css`\r\n      @media (max-width: 49rem) {\r\n        flex-direction: column;\r\n      }\r\n    `};\r\n\r\n  @media (max-width: 33.5rem) {\r\n    flex-direction: column;\r\n  }\r\n`\r\n\r\nconst PostLink = styled.button`\r\n  flex: 1 1 0;\r\n  min-width: 0;\r\n  padding: 1rem 1rem 1rem 0.75rem;\r\n  border-radius: 0.25rem;\r\n  border: ${props => props.theme.calloutBorder};\r\n  color: ${props => props.theme.icon};\r\n  background-color: transparent;\r\n  display: flex;\r\n  flex-direction: row;\r\n  gap: 0.5rem;\r\n  cursor: ${props => (props.$isActive ? \"pointer\" : \"default\")};\r\n  &:hover {\r\n    background: ${props => props.$isActive && props.theme.buttonHover};\r\n  }\r\n  &:active {\r\n    background: ${props => props.$isActive && props.theme.buttonActive};\r\n  }\r\n  transition: 20ms ease-in 0s;\r\n`\r\n\r\nconst LinkTextWrapper = styled.div`\r\n  width: 100%;\r\n  padding: 0 0.125rem;\r\n  color: ${props => props.theme.text};\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n  line-height: 1.5;\r\n  font-size: 1rem;\r\n  span {\r\n    font-size: 0.75rem;\r\n    color: ${props => props.theme.weekText};\r\n  }\r\n`\r\n\r\nconst PostLinks = ({ previous, next }) => {\r\n  const { isMobile } = useContext(MobileContext)\r\n  const { isNavFixed } = useContext(NavContext)\r\n\r\n  const handlePostLinkClick = to => {\r\n    if (to !== null) navigate(to)\r\n  }\r\n\r\n  return (\r\n    <PostLinksWrapper $isMobile={isMobile} $isNavFixed={isNavFixed}>\r\n      <PostLink\r\n        $isActive={previous !== null}\r\n        onClick={() => handlePostLinkClick(previous && previous.fields.slug)}\r\n      >\r\n        <Icon\r\n          iconName={previous !== null ? \"TbChevronLeft\" : \"TbSlash\"}\r\n          size=\"1.5rem\"\r\n        />\r\n        <LinkTextWrapper style={{ textAlign: \"left\" }}>\r\n          {previous ? previous.frontmatter.title : \"There is no post\"}\r\n          <br />\r\n          <span>Previous Post</span>\r\n        </LinkTextWrapper>\r\n      </PostLink>\r\n      <PostLink\r\n        $isActive={next !== null}\r\n        onClick={() => handlePostLinkClick(next && next.fields.slug)}\r\n      >\r\n        <LinkTextWrapper style={{ textAlign: \"right\" }}>\r\n          {next ? next.frontmatter.title : \"There is no post\"}\r\n          <br />\r\n          <span>Next Post</span>\r\n        </LinkTextWrapper>\r\n        <Icon\r\n          iconName={next !== null ? \"TbChevronRight\" : \"TbSlash\"}\r\n          size=\"1.5rem\"\r\n        />\r\n      </PostLink>\r\n    </PostLinksWrapper>\r\n  )\r\n}\r\n\r\nexport default PostLinks\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nconst TocDetailWrapper = styled.div`\r\n  width: 15.125rem;\r\n  max-height: calc(100vh - 17.25rem - 4.5rem);\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding: 0.75rem 0.75rem 0;\r\n  margin-top: -1rem;\r\n  margin-right: 0;\r\n  background-color: ${props => props.theme.background};\r\n  box-shadow: ${props => props.theme.tocBarShadow};\r\n  border: ${props => props.theme.tocBarBorder};\r\n  border-radius: 0.875rem;\r\n  overflow-y: auto;\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  opacity: 0;\r\n  z-index: -1;\r\n  visibility: hidden;\r\n\r\n  ${props =>\r\n    props.$isHovered &&\r\n    `\r\n      position: static;\r\n      z-index: 100;\r\n      margin-right: 0.625rem;\r\n      opacity: 1;\r\n      visibility: visible;\r\n    `}\r\n  transition: opacity 0.2s ease, margin-right 0.2s ease, visibility 0.2s ease;\r\n`\r\n\r\nconst ScrollWrapper = styled.div`\r\n  width: 100%;\r\n  height: fit-content;\r\n  padding: 0.375rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 0 0 auto;\r\n  .toc-1 {\r\n    margin-left: 0;\r\n  }\r\n  .toc-2 {\r\n    margin-left: 0.75rem;\r\n  }\r\n  .toc-3 {\r\n    margin-left: 1.5rem;\r\n  }\r\n  margin-bottom: 0.75rem;\r\n`\r\n\r\nconst HeaderLink = styled.a`\r\n  max-width: 100%;\r\n  padding: 0.25rem;\r\n  font-size: 0.813rem;\r\n  text-decoration: none;\r\n  user-select: none;\r\n  transition: color 0.15s;\r\n  line-height: 1.3;\r\n  cursor: pointer;\r\n  color: ${props =>\r\n    props.$isActive ? props.theme.blue : props.theme.tocTextWeek};\r\n  border-radius: 0.25rem;\r\n  &:hover {\r\n    background: ${props => props.theme.buttonHover};\r\n    color: ${props => !props.$isActive && props.theme.text};\r\n  }\r\n  transition: background 20ms ease-in;\r\n`\r\n\r\nconst TocDetail = ({ tocData, handleClickLink, activeId, $isHovered }) => {\r\n  return (\r\n    <TocDetailWrapper $isHovered={$isHovered}>\r\n      <ScrollWrapper>\r\n        {tocData &&\r\n          tocData.map((item, index) => (\r\n            <HeaderLink\r\n              key={index}\r\n              className={`toc-${item.level}`}\r\n              onClick={() => handleClickLink(item.id)}\r\n              $isActive={item.id === activeId}\r\n            >\r\n              {item.text}\r\n            </HeaderLink>\r\n          ))}\r\n      </ScrollWrapper>\r\n    </TocDetailWrapper>\r\n  )\r\n}\r\n\r\nexport default TocDetail\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nconst TocMinWrapper = styled.div`\r\n  width: 3.5rem;\r\n  flex-grow: 1;\r\n  max-height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: baseline;\r\n  overflow: hidden;\r\n  padding-bottom: 0.75rem;\r\n  padding-right: 0.5rem;\r\n`\r\n\r\nconst TocInnerWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 0 0 auto;\r\n  gap: 0.75rem;\r\n  padding-left: 1.25rem;\r\n  padding-bottom: 0.75rem;\r\n  .toc-1 {\r\n    width: 1rem;\r\n  }\r\n  .toc-2 {\r\n    width: 0.75rem;\r\n    margin-left: 0.25rem;\r\n  }\r\n  .toc-3 {\r\n    width: 0.5rem;\r\n    margin-left: 0.5rem;\r\n  }\r\n`\r\n\r\nconst TocMinBar = styled.div`\r\n  flex: 0 0 auto;\r\n  height: 0.125rem;\r\n  border-radius: 0.125rem;\r\n  transition: background 0.2s, box-shadow 0.2s;\r\n  background: ${props =>\r\n    props.$isActive ? props.theme.text : props.theme.tocMinBarBackground};\r\n  box-shadow: ${props => props.$isActive && props.theme.tocMinShadow};\r\n`\r\n\r\nconst TocMin = ({ tocData, activeId }) => {\r\n  return (\r\n    <TocMinWrapper>\r\n      <TocInnerWrapper>\r\n        {tocData.map((item, index) => (\r\n          <TocMinBar\r\n            key={index}\r\n            className={`toc-${item.level}`}\r\n            $isActive={item.id === activeId}\r\n          />\r\n        ))}\r\n      </TocInnerWrapper>\r\n    </TocMinWrapper>\r\n  )\r\n}\r\n\r\nexport default TocMin\r\n","import React, { useContext, useEffect, useState } from \"react\"\r\nimport styled, { css } from \"styled-components\"\r\nimport TocDetail from \"./TocDetail\"\r\nimport TocMin from \"./TocMin\"\r\nimport { MobileContext } from \"../../../contexts/MobileContext\"\r\nimport { NavContext } from \"../../../contexts/NavContext\"\r\n\r\nconst TocWrapper = styled.div`\r\n  display: flex;\r\n  position: absolute;\r\n  margin: 17.25rem 1rem 4.5rem 0;\r\n  max-height: calc(100vh - 17.25rem - 4.5rem);\r\n  height: auto;\r\n  top: 0;\r\n  right: 0;\r\n  z-index: 100;\r\n  ${props =>\r\n    props.$isNavFixed &&\r\n    !props.$isMobile &&\r\n    css`\r\n      @media (max-width: 68.75rem) {\r\n        display: none;\r\n      }\r\n    `}\r\n\r\n  @media (max-width: 53.25rem) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst TocBar = ({ tocData, handleClickLink }) => {\r\n  const [activeId, setActiveId] = useState(\"\")\r\n  const [isHovered, setIsHovered] = useState(false)\r\n  const { isMobile } = useContext(MobileContext)\r\n  const { isNavFixed } = useContext(NavContext)\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      entries => {\r\n        entries.forEach(entry => {\r\n          if (entry.isIntersecting) {\r\n            setActiveId(entry.target.id)\r\n          }\r\n        })\r\n      },\r\n      {\r\n        rootMargin: \"0px 0px -80% 0px\",\r\n        threshold: 0.1,\r\n      }\r\n    )\r\n\r\n    tocData.forEach((item, index) => {\r\n      const element = document.getElementById(item.id)\r\n      if (index === 0) setActiveId(item.id)\r\n      if (element) {\r\n        observer.observe(element)\r\n      }\r\n    })\r\n\r\n    return () => {\r\n      tocData.forEach(item => {\r\n        const element = document.getElementById(item.id)\r\n        if (element) {\r\n          observer.unobserve(element)\r\n        }\r\n      })\r\n    }\r\n  }, [tocData])\r\n\r\n  return (\r\n    <>\r\n      <TocWrapper\r\n        $isMobile={isMobile}\r\n        $isNavFixed={isNavFixed}\r\n        onMouseEnter={() => setIsHovered(!isMobile && true)}\r\n        onMouseLeave={() => setIsHovered(false)}\r\n      >\r\n        {isMobile || (\r\n          <TocDetail\r\n            tocData={tocData}\r\n            handleClickLink={handleClickLink}\r\n            activeId={activeId}\r\n            $isHovered={isHovered}\r\n          />\r\n        )}\r\n        {!isHovered && <TocMin tocData={tocData} activeId={activeId} />}\r\n      </TocWrapper>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TocBar\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport Icon from \"../../Icon\"\r\n\r\nconst TocWrapper = styled.div`\r\n  width: 100%;\r\n  padding: 1rem 1rem 1rem 0.75rem;\r\n  margin: 0.25rem 0 1.25rem 0;\r\n  border-radius: 0.25rem;\r\n  border: ${props => props.theme.calloutBorder};\r\n  color: ${props => props.theme.icon};\r\n  background-color: transparent;\r\n  display: flex;\r\n  flex-direction: row;\r\n  white-space: pre-wrap;\r\n  word-break: break-word;\r\n  flex: 0 0 auto;\r\n  & > svg {\r\n    flex: 0 0 auto;\r\n  }\r\n`\r\n\r\nconst TocTextWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1 1 auto;\r\n  padding: 0 0.125rem;\r\n  margin-left: 0.5rem;\r\n  overflow: hidden;\r\n  color: ${props => props.theme.text};\r\n  font-weight: 600;\r\n  line-height: 1.5;\r\n  span {\r\n    margin-bottom: 0.25rem;\r\n  }\r\n`\r\n\r\nconst HeaderLink = styled.a`\r\n  padding: 0.375rem 0 0.375rem 0.125rem;\r\n  font-size: 0.875rem;\r\n  font-weight: 400;\r\n  line-height: 1.3;\r\n  cursor: pointer;\r\n  color: ${props => props.theme.tocLinkText};\r\n  &:hover {\r\n    background: ${props => props.theme.buttonHover};\r\n  }\r\n  transition: background 20ms ease-in;\r\n  .toc-1 {\r\n    margin-left: 0;\r\n  }\r\n  .toc-2 {\r\n    margin-left: 1.5rem;\r\n  }\r\n  .toc-3 {\r\n    margin-left: 3rem;\r\n  }\r\n`\r\n\r\nconst LinkInnerText = styled.div`\r\n  width: 100%;\r\n  max-width: fit-content;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n  background-image: ${props => props.theme.tocLinkBottom};\r\n  background-repeat: repeat-x;\r\n  background-position: 0 100%;\r\n  background-size: 100% 0.0625rem;\r\n`\r\n\r\nconst TocCallout = ({ tocData, handleClickLink }) => {\r\n  return (\r\n    <TocWrapper>\r\n      <Icon iconName=\"TbListTree\" size=\"1.5rem\" />\r\n      <TocTextWrapper>\r\n        <span>Table of Contents</span>\r\n        {tocData.map((item, index) => (\r\n          <HeaderLink key={index} onClick={() => handleClickLink(item.id)}>\r\n            <LinkInnerText className={`toc-${item.level}`}>\r\n              {item.text}\r\n            </LinkInnerText>\r\n          </HeaderLink>\r\n        ))}\r\n      </TocTextWrapper>\r\n    </TocWrapper>\r\n  )\r\n}\r\n\r\nexport default TocCallout\r\n","import React, { useState, useEffect } from \"react\"\r\nimport TocBar from \"./TocBar\"\r\nimport TocCallout from \"./TocCallout\"\r\n\r\nconst Toc = () => {\r\n  const [tocData, setTocData] = useState([])\r\n\r\n  useEffect(() => {\r\n    const tocElements = Array.from(\r\n      document.querySelectorAll(\r\n        \".markdown > h1, .markdown > h2, .markdown > h3\"\r\n      )\r\n    )\r\n\r\n    const generatedTocData = generateTocData(tocElements)\r\n    setTocData(generatedTocData)\r\n  }, [])\r\n\r\n  const handleClickLink = id => {\r\n    window.location.hash = null\r\n    window.location.hash = id\r\n  }\r\n\r\n  const generateTocData = items => {\r\n    let previousLevel = -1\r\n    let tocArray = []\r\n\r\n    items.forEach((item, index) => {\r\n      let currentLevel = parseInt(item.localName.match(/\\d+/)[0], 10)\r\n\r\n      if (currentLevel > 1) {\r\n        if (previousLevel === -1) {\r\n          currentLevel = 1\r\n        } else if (currentLevel < previousLevel) {\r\n          previousLevel = currentLevel\r\n        } else if (currentLevel > previousLevel) {\r\n          currentLevel = ++previousLevel\r\n        }\r\n      } else {\r\n        previousLevel = 1\r\n      }\r\n\r\n      const tocItem = {\r\n        id: item.id,\r\n        text: item.innerText,\r\n        level: currentLevel,\r\n      }\r\n\r\n      tocArray.push(tocItem)\r\n    })\r\n\r\n    return tocArray\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <TocBar tocData={tocData} handleClickLink={handleClickLink} />\r\n      <TocCallout tocData={tocData} handleClickLink={handleClickLink} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Toc\r\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport Seo from \"../components/Seo\"\r\nimport MainTitle from \"../components/MainTitle\"\r\nimport MarkdownWrapper from \"../components/MarkdownWrapper\"\r\nimport PostLinks from \"../components/PostLinks\"\r\nimport Toc from \"../components/TableOfContents\"\r\nimport { metaDescription, siteUrl } from \"../../blog-config\"\r\n\r\nconst PostTemplate = ({ data }) => {\r\n  const post = data.markdownRemark\r\n  const { frontmatter, fields, html } = post\r\n  const { previous, next } = data\r\n\r\n  return (\r\n    <>\r\n      <Seo\r\n        title={frontmatter.title}\r\n        description={metaDescription}\r\n        url={`${siteUrl}${fields.slug}`}\r\n        icon={frontmatter.icon}\r\n      />\r\n      <MainTitle\r\n        type=\"post\"\r\n        title={frontmatter.title}\r\n        date={frontmatter.date}\r\n        icon={frontmatter.icon}\r\n        series={frontmatter.series}\r\n        tags={frontmatter.tags}\r\n      />\r\n      <Toc />\r\n      <MarkdownWrapper html={html} />\r\n      <PostLinks previous={previous} next={next} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query ($id: String!, $previousPostId: String, $nextPostId: String) {\r\n    markdownRemark(id: { eq: $id }) {\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        series\r\n        icon\r\n        tags\r\n      }\r\n      fields {\r\n        slug\r\n      }\r\n      html\r\n    }\r\n    previous: markdownRemark(id: { eq: $previousPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n    next: markdownRemark(id: { eq: $nextPostId }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default PostTemplate\r\n"],"names":["MarkdownStyler","styled","section","withConfig","displayName","componentId","props","theme","text","mdAnchorBorder","mdHrBorder","blue","mdCheckboxTextline","weekText","mdTableBorder","mdTableThBackground","background","buttonHover","LightTheme","css","createGlobalStyle","BaseTheme","mdInlineCodeBackground","red","DarkTheme","PrismStyler","context","useContext","ThemeContext","ThemeMode","React","BaseMode","LightMode","DarkMode","_ref","html","className","dangerouslySetInnerHTML","__html","PostLinksWrapper","div","$isNavFixed","$isMobile","PostLink","button","calloutBorder","icon","$isActive","buttonActive","LinkTextWrapper","previous","next","isMobile","MobileContext","isNavFixed","NavContext","handlePostLinkClick","to","navigate","onClick","fields","slug","Icon","iconName","size","style","textAlign","frontmatter","title","TocDetailWrapper","tocBarShadow","tocBarBorder","$isHovered","ScrollWrapper","HeaderLink","a","tocTextWeek","tocData","handleClickLink","activeId","map","item","index","key","level","id","TocMinWrapper","TocInnerWrapper","TocMinBar","tocMinBarBackground","tocMinShadow","TocWrapper","setActiveId","useState","isHovered","setIsHovered","useEffect","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","rootMargin","threshold","element","document","getElementById","observe","unobserve","onMouseEnter","onMouseLeave","TocDetail","TocMin","TocTextWrapper","tocLinkText","LinkInnerText","tocLinkBottom","Toc","setTocData","tocElements","Array","from","querySelectorAll","generatedTocData","generateTocData","window","location","hash","items","previousLevel","tocArray","currentLevel","parseInt","localName","match","tocItem","innerText","push","TocBar","TocCallout","data","post","markdownRemark","Seo","description","metaDescription","url","siteUrl","MainTitle","type","date","series","tags","MarkdownWrapper","PostLinks"],"sourceRoot":""}