{"version":3,"file":"component---src-pages-index-jsx-3033869e1c481a7925b3.js","mappings":"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","sources":["webpack://lellowmellow-blog/./src/components/Database/TabBar/index.jsx","webpack://lellowmellow-blog/./src/components/Database/CardBlock/index.jsx","webpack://lellowmellow-blog/./src/utils/truncateText.js","webpack://lellowmellow-blog/./src/components/Database/ListBlock/index.jsx","webpack://lellowmellow-blog/./src/components/Database/NoData/index.jsx","webpack://lellowmellow-blog/./src/components/Database/index.jsx","webpack://lellowmellow-blog/./src/pages/index.jsx"],"sourcesContent":["import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport Icon from \"../../Icon\"\r\n\r\nconst TabBarWrapper = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 2.5rem;\r\n  box-shadow: ${props => props.theme.tabBar};\r\n  user-select: none;\r\n  -webkit-user-select: none;\r\n`\r\n\r\nconst TabWrapper = styled.div`\r\n  height: auto;\r\n  display: flex;\r\n  align-items: center;\r\n  border-bottom: ${props =>\r\n    props.$isSelected ? props.theme.tabBarSelected : \"none\"};\r\n  border-top: ${props => (props.$isSelected ? \"0.125rem solid #0000\" : \"none\")};\r\n`\r\n\r\nconst TabButton = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  flex: 0 0 auto;\r\n  white-space: nowrap;\r\n  height: 1.75rem;\r\n  border-radius: 0.25rem;\r\n  font-size: 0.875rem;\r\n  line-height: 1.2;\r\n  padding: 0 0.5rem;\r\n  font-weight: 500;\r\n  gap: 0.375rem;\r\n\r\n  color: ${props =>\r\n    props[\"aria-selected\"] ? props.theme.text : props.theme.weekText};\r\n\r\n  &:hover {\r\n    background: ${props => props.theme.buttonHover};\r\n  }\r\n  &:active {\r\n    background: ${props => props.theme.buttonActive};\r\n  }\r\n  transition: 20ms ease-in 0s;\r\n`\r\n\r\nconst TabBar = ({ isGridView, changeToGrid, changeToList, isSeries }) => {\r\n  return (\r\n    <TabBarWrapper role=\"tablist\">\r\n      {isSeries || (\r\n        <TabWrapper $isSelected={isGridView}>\r\n          <TabButton\r\n            role=\"tab\"\r\n            aria-selected={isGridView}\r\n            onClick={changeToGrid}\r\n          >\r\n            <Icon iconName=\"TbLayoutGrid\" size=\"1rem\" />\r\n            <span>Grid view</span>\r\n          </TabButton>\r\n        </TabWrapper>\r\n      )}\r\n      <TabWrapper $isSelected={!isGridView}>\r\n        <TabButton\r\n          role=\"tab\"\r\n          aria-selected={!isGridView}\r\n          onClick={changeToList}\r\n        >\r\n          <Icon iconName=\"TbList\" size=\"1rem\" />\r\n          <span>List view</span>\r\n        </TabButton>\r\n      </TabWrapper>\r\n    </TabBarWrapper>\r\n  )\r\n}\r\n\r\nexport default TabBar\r\n","// src/components/PostCard.js\r\nimport React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { navigate } from \"gatsby\"\r\nimport { truncateText } from \"../../../utils/truncateText\"\r\nimport Icon from \"../../Icon\"\r\n\r\nconst CardWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  color: ${props => props.theme.text};\r\n  text-decoration: none;\r\n  line-height: 1.5;\r\n  cursor: pointer;\r\n  box-shadow: ${props => props.theme.cardShadow};\r\n  border-radius: 0.25rem;\r\n  background: ${props => props.theme.cardBackground};\r\n  overflow: hidden;\r\n  flex-direction: column;\r\n  &:hover {\r\n    background: ${props => props.theme.cardHover};\r\n  }\r\n  &:active {\r\n    background: ${props => props.theme.cardActive};\r\n  }\r\n  transition: 20ms ease-in 0s;\r\n  user-select: none;\r\n  -webkit-user-select: none;\r\n`\r\n\r\nconst CardThumbnail = styled.div`\r\n  width: 100%;\r\n  height: 12rem;\r\n  background: ${props => props.theme.text};\r\n  color: ${props => props.theme.background};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst Title = styled.p`\r\n  font-size: 0.875rem;\r\n  width: 100%;\r\n  padding: 0.5rem 0.625rem 0.375rem;\r\n  line-height: 1.5;\r\n  font-weight: 500;\r\n`\r\n\r\nconst InfoWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.125rem;\r\n  padding: 0 0.375rem 0.75rem;\r\n`\r\n\r\nconst InfoText = styled.p`\r\n  width: 100%;\r\n  font-size: 0.75rem;\r\n  padding: 0 0.375rem;\r\n  line-height: 2;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n`\r\n\r\nconst TagsWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: left;\r\n  gap: 0.375rem;\r\n  padding: 0.25rem 0.375rem;\r\n  overflow-x: scroll;\r\n  -ms-overflow-style: none; /* IE and Edge */\r\n  scrollbar-width: none; /* Firefox */\r\n  &:-webkit-scrollbar {\r\n    display: none; /* Chrome, Safari, Opera*/\r\n  }\r\n`\r\n\r\nconst Tag = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-shrink: 0;\r\n  height: 1.125rem;\r\n  border-radius: 0.25rem;\r\n  padding: 0 0.375rem;\r\n  font-size: 0.75rem;\r\n  white-space: nowrap;\r\n  background: ${props => props.theme.tag};\r\n  outline: 0.25rem solid #0000;\r\n  color: ${props => props.theme.text};\r\n  &:hover {\r\n    outline: 0.25rem solid ${props => props.theme.buttonHover};\r\n  }\r\n  &:active {\r\n    outline: 0.25rem solid ${props => props.theme.buttonActive};\r\n  }\r\n  transition: 20ms ease-in 0s;\r\n`\r\n\r\nconst CardBlock = ({ to, title, date, icon, tags, detail }) => {\r\n  const handleTagClicked = (to, event) => {\r\n    event.stopPropagation()\r\n    navigate(`/tags/${to.replace(/\\s+/g, \"-\")}/`)\r\n  }\r\n\r\n  return (\r\n    <CardWrapper onClick={() => navigate(to)}>\r\n      <CardThumbnail>\r\n        <Icon iconName={icon} size=\"2rem\" />\r\n      </CardThumbnail>\r\n      <Title>{title}</Title>\r\n      <InfoWrapper>\r\n        <InfoText>{date}</InfoText>\r\n        <TagsWrapper>\r\n          {tags &&\r\n            tags.map(tag => (\r\n              <Tag key={tag} onClick={event => handleTagClicked(tag, event)}>\r\n                {tag}\r\n              </Tag>\r\n            ))}\r\n        </TagsWrapper>\r\n        <InfoText>{truncateText(detail, 200)}</InfoText>\r\n      </InfoWrapper>\r\n    </CardWrapper>\r\n  )\r\n}\r\n\r\nexport default CardBlock\r\n","export function truncateText(text, maxLength) {\r\n  if (text?.length > maxLength) {\r\n    return text.slice(0, maxLength - 1) + \"...\"\r\n  }\r\n  return text\r\n}\r\n","// src/components/PostCard.js\r\nimport React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { Link } from \"gatsby\"\r\nimport Icon from \"../../Icon\"\r\n\r\nconst BlockWrapper = styled.a`\r\n  width: 100%;\r\n  height: 1.875rem;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.25rem;\r\n  cursor: pointer;\r\n  border-radius: 0.25rem;\r\n  color: ${props => props.theme.weekIcon};\r\n  background: ${props => props.theme.background};\r\n  overflow: hidden;\r\n  margin: 0.0625rem 0;\r\n  padding: 0 0.25rem;\r\n  flex-direction: row;\r\n  &:hover {\r\n    background: ${props => props.theme.buttonHover};\r\n  }\r\n  &:active {\r\n    background: ${props => props.theme.buttonActive};\r\n  }\r\n  & > * {\r\n    flex: 0 0 auto;\r\n  }\r\n  transition: 20ms ease-in 0s;\r\n`\r\n\r\nconst Title = styled.span`\r\n  font-size: 1rem;\r\n  line-height: 1.5;\r\n  font-weight: 500;\r\n  color: ${props => props.theme.text};\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  flex: 1 1 auto;\r\n`\r\n\r\nconst InfoText = styled.span`\r\n  font-size: 0.75rem;\r\n  padding: 0 0.375rem;\r\n  line-height: 1.5;\r\n  color: ${props => props.theme.text};\r\n`\r\n\r\nconst ListBlock = ({ to, title, date, icon, post }) => {\r\n  return (\r\n    <BlockWrapper as={Link} to={to}>\r\n      <Icon iconName={icon} size=\"1.375rem\" />\r\n      <Title>{title}</Title>\r\n      <InfoText>{date || `${post} posts`}</InfoText>\r\n    </BlockWrapper>\r\n  )\r\n}\r\n\r\nexport default ListBlock\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { navigate } from \"gatsby\"\r\n\r\nconst NoResult = styled.div`\r\n  margin: 3rem 0;\r\n  flex: 1 1 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 0.875rem;\r\n  line-height: 1.5;\r\n  text-align: center;\r\n  span:nth-child(1) {\r\n    font-weight: 500;\r\n    color: ${props => props.theme.weekText};\r\n  }\r\n  span:nth-child(2) {\r\n    color: ${props => props.theme.searchText};\r\n  }\r\n  button {\r\n    line-height: 1.5;\r\n    font-size: 0.875rem;\r\n    color: ${props => props.theme.blue};\r\n  }\r\n`\r\n\r\nconst NoData = ({ main, series }) => {\r\n  return (\r\n    <NoResult>\r\n      <span>\r\n        {main && \"No Posts\"}\r\n        {series && \"No Series\"}\r\n      </span>\r\n      <span>\r\n        {main && \"There are no posts in this blog.\"}\r\n        {series && \"There are no series in this blog.\"}\r\n      </span>\r\n      <button onClick={() => navigate(\"/\")}>Go to main page</button>\r\n    </NoResult>\r\n  )\r\n}\r\n\r\nexport default NoData\r\n","import React, { useState, useEffect, useRef } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport TabBar from \"./TabBar\"\r\nimport CardBlock from \"./CardBlock\"\r\nimport ListBlock from \"./ListBlock\"\r\nimport NoData from \"./NoData\"\r\n\r\nconst Title = styled.h2`\r\n  flex: 0 1 auto;\r\n  margin-top: 4rem;\r\n  margin-bottom: 0.25rem;\r\n  padding: 0.25rem 0.125rem;\r\n  font-weight: 600;\r\n  font-size: 1.875rem;\r\n  color: ${props => props.theme.text};\r\n  line-height: 1.3;\r\n`\r\n\r\nconst GridWrapper = styled.div`\r\n  margin-top: 1rem;\r\n  margin-bottom: 0.25rem;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(16.25rem, 1fr));\r\n  gap: 1rem;\r\n`\r\n\r\nconst ListWrapper = styled.div`\r\n  margin-top: 0.25rem;\r\n  margin-bottom: 0.25rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst Database = ({\r\n  data,\r\n  main = false,\r\n  series = false,\r\n  tags = false,\r\n  seriesPost = false,\r\n}) => {\r\n  const [isGridView, setIsGridView] = useState(!series)\r\n  const [visibleBlock, setVisibleBlock] = useState(10)\r\n  const [dataProps, setDataProps] = useState([])\r\n  const observerRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n    const handleIntersection = entries => {\r\n      if (entries[0].isIntersecting) {\r\n        setVisibleBlock(prevCount => Math.min(prevCount + 10, data.length))\r\n      }\r\n    }\r\n\r\n    const observer = new IntersectionObserver(handleIntersection, {\r\n      root: null,\r\n      rootMargin: \"0px\",\r\n      threshold: 1,\r\n    })\r\n    const currentObserver = observerRef.current\r\n\r\n    if (currentObserver) observer.observe(currentObserver)\r\n    return () => {\r\n      if (currentObserver) observer.unobserve(currentObserver)\r\n    }\r\n  }, [data.length])\r\n\r\n  useEffect(() => {\r\n    const updatedBlockProps = data.slice(0, visibleBlock).map(item => {\r\n      if (series)\r\n        return {\r\n          key: item.fieldValue,\r\n          to: `/series/${item.fieldValue.replace(/\\s+/g, \"-\")}/`,\r\n          icon: \"TbFolderOpen\",\r\n          title: item.fieldValue,\r\n          post: item.totalCount,\r\n        }\r\n      else\r\n        return {\r\n          key: item.node.id,\r\n          to: item.node.fields.slug,\r\n          title: item.node.frontmatter.title,\r\n          date: new Date(item.node.frontmatter.date).toLocaleDateString(),\r\n          icon: item.node.frontmatter.icon,\r\n          tags: item.node.frontmatter.tags,\r\n          detail: item.node.excerpt,\r\n        }\r\n    })\r\n    setDataProps(updatedBlockProps)\r\n  }, [visibleBlock, data, series])\r\n\r\n  return (\r\n    <>\r\n      <Title>\r\n        {main && \"All Posts\"}\r\n        {series && \"All Series\"}\r\n      </Title>\r\n      <TabBar\r\n        isGridView={isGridView}\r\n        isSeries={series}\r\n        changeToGrid={() => setIsGridView(true)}\r\n        changeToList={() => setIsGridView(false)}\r\n      />\r\n      {!data.length && <NoData main={main} series={series} />}\r\n      {isGridView ? (\r\n        <GridWrapper>\r\n          {dataProps.map(props => (\r\n            <CardBlock {...props} />\r\n          ))}\r\n        </GridWrapper>\r\n      ) : (\r\n        <ListWrapper>\r\n          {dataProps.map(props => (\r\n            <ListBlock {...props} />\r\n          ))}\r\n        </ListWrapper>\r\n      )}\r\n      {visibleBlock < data.length && (\r\n        <div\r\n          ref={observerRef}\r\n          style={{ height: \"1rem\", marginBottom: \"10rem\" }}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Database\r\n","import * as React from \"react\"\r\nimport Seo from \"../components/Seo\"\r\nimport MainTitle from \"../components/MainTitle\"\r\nimport Database from \"../components/Database/index.jsx\"\r\nimport { graphql } from \"gatsby\"\r\nimport {\r\n  title,\r\n  description,\r\n  metaDescription,\r\n  mainIcon,\r\n  siteUrl,\r\n} from \"../../blog-config.js\"\r\n\r\nconst IndexPage = ({ data }) => {\r\n  const initialPosts = data.allMarkdownRemark.edges\r\n\r\n  return (\r\n    <>\r\n      <Seo\r\n        title={title}\r\n        description={metaDescription}\r\n        url={siteUrl}\r\n        icon={mainIcon}\r\n      />\r\n      <MainTitle\r\n        type=\"main\"\r\n        title={title}\r\n        description={description}\r\n        icon={mainIcon}\r\n      />\r\n      <Database data={initialPosts} main />\r\n    </>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            icon\r\n            tags\r\n          }\r\n          excerpt(pruneLength: 250)\r\n          fields {\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default IndexPage\r\n"],"names":["TabBarWrapper","styled","div","withConfig","displayName","componentId","props","theme","tabBar","TabWrapper","$isSelected","tabBarSelected","TabButton","button","text","weekText","buttonHover","buttonActive","_ref","isGridView","changeToGrid","changeToList","isSeries","React","role","onClick","Icon","iconName","size","CardWrapper","cardShadow","cardBackground","cardHover","cardActive","CardThumbnail","background","Title","p","InfoWrapper","InfoText","TagsWrapper","Tag","tag","to","title","date","icon","tags","detail","navigate","map","key","event","handleTagClicked","stopPropagation","replace","maxLength","length","slice","BlockWrapper","a","weekIcon","span","post","as","Link","NoResult","searchText","blue","main","series","h2","GridWrapper","ListWrapper","data","seriesPost","setIsGridView","useState","visibleBlock","setVisibleBlock","dataProps","setDataProps","observerRef","useRef","useEffect","observer","IntersectionObserver","entries","isIntersecting","prevCount","Math","min","root","rootMargin","threshold","currentObserver","current","observe","unobserve","updatedBlockProps","item","fieldValue","totalCount","node","id","fields","slug","frontmatter","Date","toLocaleDateString","excerpt","TabBar","NoData","CardBlock","ListBlock","ref","style","height","marginBottom","initialPosts","allMarkdownRemark","edges","Seo","description","metaDescription","url","siteUrl","mainIcon","MainTitle","type","Database"],"sourceRoot":""}