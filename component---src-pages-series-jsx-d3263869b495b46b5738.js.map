{"version":3,"file":"component---src-pages-series-jsx-d3263869b495b46b5738.js","mappings":"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","sources":["webpack://lellowmellow-blog/./src/components/Database/TabBar/index.jsx","webpack://lellowmellow-blog/./src/components/Database/CardBlock/index.jsx","webpack://lellowmellow-blog/./src/utils/truncateText.js","webpack://lellowmellow-blog/./src/components/Database/ListBlock/index.jsx","webpack://lellowmellow-blog/./src/components/Database/NoData/index.jsx","webpack://lellowmellow-blog/./src/components/Database/index.jsx","webpack://lellowmellow-blog/./src/components/MainTitle/Property/index.jsx","webpack://lellowmellow-blog/./src/components/MainTitle/index.jsx","webpack://lellowmellow-blog/./src/pages/series.jsx"],"sourcesContent":["import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport Icon from \"../../Icon\"\r\n\r\nconst TabBarWrapper = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 2.5rem;\r\n  box-shadow: ${props => props.theme.tabBar};\r\n  user-select: none;\r\n  -webkit-user-select: none;\r\n`\r\n\r\nconst TabWrapper = styled.div`\r\n  height: auto;\r\n  display: flex;\r\n  align-items: center;\r\n  border-bottom: ${props =>\r\n    props.$isSelected ? props.theme.tabBarSelected : \"none\"};\r\n  border-top: ${props => (props.$isSelected ? \"0.125rem solid #0000\" : \"none\")};\r\n`\r\n\r\nconst TabButton = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  flex: 0 0 auto;\r\n  white-space: nowrap;\r\n  height: 1.75rem;\r\n  border-radius: 0.25rem;\r\n  font-size: 0.875rem;\r\n  line-height: 1.2;\r\n  padding: 0 0.5rem;\r\n  font-weight: 500;\r\n  gap: 0.375rem;\r\n\r\n  color: ${props =>\r\n    props[\"aria-selected\"] ? props.theme.text : props.theme.weekText};\r\n\r\n  &:hover {\r\n    background: ${props => props.theme.buttonHover};\r\n  }\r\n  &:active {\r\n    background: ${props => props.theme.buttonActive};\r\n  }\r\n  transition: 20ms ease-in 0s;\r\n`\r\n\r\nconst TabBar = ({ isGridView, changeToGrid, changeToList, isSeries }) => {\r\n  return (\r\n    <TabBarWrapper role=\"tablist\">\r\n      {isSeries || (\r\n        <TabWrapper $isSelected={isGridView}>\r\n          <TabButton\r\n            role=\"tab\"\r\n            aria-selected={isGridView}\r\n            onClick={changeToGrid}\r\n          >\r\n            <Icon iconName=\"TbLayoutGrid\" size=\"1rem\" />\r\n            <span>Grid view</span>\r\n          </TabButton>\r\n        </TabWrapper>\r\n      )}\r\n      <TabWrapper $isSelected={!isGridView}>\r\n        <TabButton\r\n          role=\"tab\"\r\n          aria-selected={!isGridView}\r\n          onClick={changeToList}\r\n        >\r\n          <Icon iconName=\"TbList\" size=\"1rem\" />\r\n          <span>List view</span>\r\n        </TabButton>\r\n      </TabWrapper>\r\n    </TabBarWrapper>\r\n  )\r\n}\r\n\r\nexport default TabBar\r\n","// src/components/PostCard.js\r\nimport React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { navigate } from \"gatsby\"\r\nimport { truncateText } from \"../../../utils/truncateText\"\r\nimport Icon from \"../../Icon\"\r\n\r\nconst CardWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  color: ${props => props.theme.text};\r\n  text-decoration: none;\r\n  line-height: 1.5;\r\n  cursor: pointer;\r\n  box-shadow: ${props => props.theme.cardShadow};\r\n  border-radius: 0.25rem;\r\n  background: ${props => props.theme.cardBackground};\r\n  overflow: hidden;\r\n  flex-direction: column;\r\n  &:hover {\r\n    background: ${props => props.theme.cardHover};\r\n  }\r\n  &:active {\r\n    background: ${props => props.theme.cardActive};\r\n  }\r\n  transition: 20ms ease-in 0s;\r\n  user-select: none;\r\n  -webkit-user-select: none;\r\n`\r\n\r\nconst CardThumbnail = styled.div`\r\n  width: 100%;\r\n  height: 12rem;\r\n  background: ${props => props.theme.text};\r\n  color: ${props => props.theme.background};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst Title = styled.p`\r\n  font-size: 0.875rem;\r\n  width: 100%;\r\n  padding: 0.5rem 0.625rem 0.375rem;\r\n  line-height: 1.5;\r\n  font-weight: 500;\r\n`\r\n\r\nconst InfoWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.125rem;\r\n  padding: 0 0.375rem 0.75rem;\r\n`\r\n\r\nconst InfoText = styled.p`\r\n  width: 100%;\r\n  font-size: 0.75rem;\r\n  padding: 0 0.375rem;\r\n  line-height: 2;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n`\r\n\r\nconst TagsWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: left;\r\n  gap: 0.375rem;\r\n  padding: 0.25rem 0.375rem;\r\n  overflow-x: scroll;\r\n  -ms-overflow-style: none; /* IE and Edge */\r\n  scrollbar-width: none; /* Firefox */\r\n  &:-webkit-scrollbar {\r\n    display: none; /* Chrome, Safari, Opera*/\r\n  }\r\n`\r\n\r\nconst Tag = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-shrink: 0;\r\n  height: 1.125rem;\r\n  border-radius: 0.25rem;\r\n  padding: 0 0.375rem;\r\n  font-size: 0.75rem;\r\n  white-space: nowrap;\r\n  background: ${props => props.theme.tag};\r\n  outline: 0.25rem solid #0000;\r\n  color: ${props => props.theme.text};\r\n  &:hover {\r\n    outline: 0.25rem solid ${props => props.theme.buttonHover};\r\n  }\r\n  &:active {\r\n    outline: 0.25rem solid ${props => props.theme.buttonActive};\r\n  }\r\n  transition: 20ms ease-in 0s;\r\n`\r\n\r\nconst CardBlock = ({ to, title, date, icon, tags, detail }) => {\r\n  const handleTagClicked = (to, event) => {\r\n    event.stopPropagation()\r\n    navigate(`/tags/${to}/`)\r\n  }\r\n\r\n  return (\r\n    <CardWrapper onClick={() => navigate(to)}>\r\n      <CardThumbnail>\r\n        <Icon iconName={icon} size=\"2rem\" />\r\n      </CardThumbnail>\r\n      <Title>{title}</Title>\r\n      <InfoWrapper>\r\n        <InfoText>{date}</InfoText>\r\n        <TagsWrapper>\r\n          {tags &&\r\n            tags.map(tag => (\r\n              <Tag key={tag} onClick={event => handleTagClicked(tag, event)}>\r\n                {tag}\r\n              </Tag>\r\n            ))}\r\n        </TagsWrapper>\r\n        <InfoText>{truncateText(detail, 200)}</InfoText>\r\n      </InfoWrapper>\r\n    </CardWrapper>\r\n  )\r\n}\r\n\r\nexport default CardBlock\r\n","export function truncateText(text, maxLength) {\r\n  if (text?.length > maxLength) {\r\n    return text.slice(0, maxLength - 1) + \"...\"\r\n  }\r\n  return text\r\n}\r\n","// src/components/PostCard.js\r\nimport React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { Link } from \"gatsby\"\r\nimport Icon from \"../../Icon\"\r\n\r\nconst BlockWrapper = styled.a`\r\n  width: 100%;\r\n  height: 1.875rem;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.25rem;\r\n  cursor: pointer;\r\n  border-radius: 0.25rem;\r\n  color: ${props => props.theme.weekIcon};\r\n  background: ${props => props.theme.background};\r\n  overflow: hidden;\r\n  margin: 0.0625rem 0;\r\n  padding: 0 0.25rem;\r\n  flex-direction: row;\r\n  &:hover {\r\n    background: ${props => props.theme.buttonHover};\r\n  }\r\n  &:active {\r\n    background: ${props => props.theme.buttonActive};\r\n  }\r\n  & > * {\r\n    flex: 0 0 auto;\r\n  }\r\n  transition: 20ms ease-in 0s;\r\n`\r\n\r\nconst Title = styled.span`\r\n  font-size: 1rem;\r\n  line-height: 1.5;\r\n  font-weight: 500;\r\n  color: ${props => props.theme.text};\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  flex: 1 1 auto;\r\n`\r\n\r\nconst InfoText = styled.span`\r\n  font-size: 0.75rem;\r\n  padding: 0 0.375rem;\r\n  line-height: 1.5;\r\n  color: ${props => props.theme.text};\r\n`\r\n\r\nconst ListBlock = ({ to, title, date, icon, post }) => {\r\n  return (\r\n    <BlockWrapper as={Link} to={to}>\r\n      <Icon iconName={icon} size=\"1.375rem\" />\r\n      <Title>{title}</Title>\r\n      <InfoText>{date || `${post} posts`}</InfoText>\r\n    </BlockWrapper>\r\n  )\r\n}\r\n\r\nexport default ListBlock\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { navigate } from \"gatsby\"\r\n\r\nconst NoResult = styled.div`\r\n  margin: 3rem 0;\r\n  flex: 1 1 auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 0.875rem;\r\n  line-height: 1.5;\r\n  text-align: center;\r\n  span:nth-child(1) {\r\n    font-weight: 500;\r\n    color: ${props => props.theme.weekText};\r\n  }\r\n  span:nth-child(2) {\r\n    color: ${props => props.theme.searchText};\r\n  }\r\n  button {\r\n    line-height: 1.5;\r\n    font-size: 0.875rem;\r\n    color: ${props => props.theme.blue};\r\n  }\r\n`\r\n\r\nconst NoData = ({ main, series }) => {\r\n  return (\r\n    <NoResult>\r\n      <span>\r\n        {main && \"No Posts\"}\r\n        {series && \"No Series\"}\r\n      </span>\r\n      <span>\r\n        {main && \"There are no posts in this blog.\"}\r\n        {series && \"There are no series in this blog.\"}\r\n      </span>\r\n      <button onClick={() => navigate(\"/\")}>Go to main page</button>\r\n    </NoResult>\r\n  )\r\n}\r\n\r\nexport default NoData\r\n","import React, { useState, useEffect, useRef } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport TabBar from \"./TabBar\"\r\nimport CardBlock from \"./CardBlock\"\r\nimport ListBlock from \"./ListBlock\"\r\nimport NoData from \"./NoData\"\r\n\r\nconst Title = styled.h2`\r\n  flex: 0 1 auto;\r\n  margin-top: 4rem;\r\n  margin-bottom: 0.25rem;\r\n  padding: 0.25rem 0.125rem;\r\n  font-weight: 600;\r\n  font-size: 1.875rem;\r\n  color: ${props => props.theme.text};\r\n  line-height: 1.3;\r\n`\r\n\r\nconst GridWrapper = styled.div`\r\n  margin-top: 1rem;\r\n  margin-bottom: 0.25rem;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(16.25rem, 1fr));\r\n  gap: 1rem;\r\n`\r\n\r\nconst ListWrapper = styled.div`\r\n  margin-top: 0.25rem;\r\n  margin-bottom: 0.25rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst Database = ({\r\n  data,\r\n  main = false,\r\n  series = false,\r\n  tags = false,\r\n  seriesPost = false,\r\n}) => {\r\n  const [isGridView, setIsGridView] = useState(!series)\r\n  const [visibleBlock, setVisibleBlock] = useState(10)\r\n  const [dataProps, setDataProps] = useState([])\r\n  const observerRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n    const handleIntersection = entries => {\r\n      if (entries[0].isIntersecting) {\r\n        setVisibleBlock(prevCount => Math.min(prevCount + 10, data.length))\r\n      }\r\n    }\r\n\r\n    const observer = new IntersectionObserver(handleIntersection, {\r\n      root: null,\r\n      rootMargin: \"0px\",\r\n      threshold: 1,\r\n    })\r\n    const currentObserver = observerRef.current\r\n\r\n    if (currentObserver) observer.observe(currentObserver)\r\n    return () => {\r\n      if (currentObserver) observer.unobserve(currentObserver)\r\n    }\r\n  }, [data.length])\r\n\r\n  useEffect(() => {\r\n    const updatedBlockProps = data.slice(0, visibleBlock).map(item => {\r\n      if (series)\r\n        return {\r\n          key: item.fieldValue,\r\n          to: `/series/${item.fieldValue}/`,\r\n          icon: \"TbFolderOpen\",\r\n          title: item.fieldValue,\r\n          post: item.totalCount,\r\n        }\r\n      else\r\n        return {\r\n          key: item.node.id,\r\n          to: item.node.fields.slug,\r\n          title: item.node.frontmatter.title,\r\n          date: new Date(item.node.frontmatter.date).toLocaleDateString(),\r\n          icon: item.node.frontmatter.icon,\r\n          tags: item.node.frontmatter.tags,\r\n          detail: item.node.excerpt,\r\n        }\r\n    })\r\n    setDataProps(updatedBlockProps)\r\n  }, [visibleBlock, data, series])\r\n\r\n  return (\r\n    <>\r\n      <Title>\r\n        {main && \"All Posts\"}\r\n        {series && \"All Series\"}\r\n      </Title>\r\n      <TabBar\r\n        isGridView={isGridView}\r\n        isSeries={series}\r\n        changeToGrid={() => setIsGridView(true)}\r\n        changeToList={() => setIsGridView(false)}\r\n      />\r\n      {!data.length && <NoData main={main} series={series} />}\r\n      {isGridView ? (\r\n        <GridWrapper>\r\n          {dataProps.map(props => (\r\n            <CardBlock {...props} />\r\n          ))}\r\n        </GridWrapper>\r\n      ) : (\r\n        <ListWrapper>\r\n          {dataProps.map(props => (\r\n            <ListBlock {...props} />\r\n          ))}\r\n        </ListWrapper>\r\n      )}\r\n      {visibleBlock < data.length && (\r\n        <div\r\n          ref={observerRef}\r\n          style={{ height: \"1rem\", marginBottom: \"10rem\" }}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Database\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport Icon from \"../../Icon\"\r\nimport { author } from \"../../../../blog-config\"\r\nimport { navigate } from \"gatsby\"\r\n\r\nconst PropertyConatainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 1rem;\r\n  margin-bottom: 1rem;\r\n  padding-bottom: 0.75rem;\r\n  border-bottom: ${props => props.theme.divider};\r\n`\r\n\r\nconst PropertyWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  height: 2.125rem;\r\n  margin-bottom: 0.25rem;\r\n`\r\n\r\nconst PropertyTitle = styled.div`\r\n  width: 10rem;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  gap: 0.375rem;\r\n  padding: 0 0.375rem;\r\n  color: ${props => props.theme.weekText};\r\n  font-size: 0.875em;\r\n  font-weight: 500;\r\n  & > svg {\r\n    color: ${props => props.theme.weekIcon};\r\n  }\r\n`\r\n\r\nconst PropertyValue = styled.div`\r\n  flex: 1 1 auto;\r\n  height: 100%;\r\n  padding: 0.375rem 0.5rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  font-size: 0.875em;\r\n  color: ${props => props.theme.text};\r\n  gap: 0.375rem;\r\n  overflow-x: scroll;\r\n  -ms-overflow-style: none; /* IE and Edge */\r\n  scrollbar-width: none; /* Firefox */\r\n  &:-webkit-scrollbar {\r\n    display: none; /* Chrome, Safari, Opera*/\r\n  }\r\n`\r\n\r\nconst PropertyLink = styled.a`\r\n  flex: 1 1 auto;\r\n  height: 100%;\r\n  padding: 0.375rem 0.5rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  font-size: 0.875em;\r\n  color: ${props => props.theme.weekText};\r\n  text-decoration: ${props => (props.$isActive ? \"underline\" : \"none\")};\r\n  cursor: ${props => (props.$isActive ? \"pointer\" : \"default\")};\r\n`\r\n\r\nconst Tag = styled.button`\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  color: ${props => props.theme.text};\r\n  background: ${props => props.theme.tag};\r\n  padding: 0 0.375rem;\r\n  border-radius: 0.25rem;\r\n  &:hover {\r\n    background: ${props => props.theme.buttonHover};\r\n  }\r\n  &:active {\r\n    background: ${props => props.theme.buttonActive};\r\n  }\r\n  transition: 20ms ease-in 0s;\r\n`\r\n\r\nconst Property = ({ date, tags, series }) => {\r\n  return (\r\n    <PropertyConatainer>\r\n      <PropertyWrapper>\r\n        <PropertyTitle>\r\n          <Icon iconName=\"TbUserEdit\" size=\"1rem\" /> <span>Author</span>\r\n        </PropertyTitle>\r\n        <PropertyValue>@{author}</PropertyValue>\r\n      </PropertyWrapper>\r\n\r\n      <PropertyWrapper>\r\n        <PropertyTitle>\r\n          <Icon iconName=\"TbCalendarMonth\" size=\"1rem\" /> <span>Date</span>\r\n        </PropertyTitle>\r\n        <PropertyValue>{date}</PropertyValue>\r\n      </PropertyWrapper>\r\n\r\n      <PropertyWrapper>\r\n        <PropertyTitle>\r\n          <Icon iconName=\"TbLayoutList\" size=\"1rem\" /> <span>Series</span>\r\n        </PropertyTitle>\r\n        <PropertyLink\r\n          $isActive={series}\r\n          onClick={() => navigate(`/series/${series}/`)}\r\n        >\r\n          {series || \"-\"}\r\n        </PropertyLink>\r\n      </PropertyWrapper>\r\n\r\n      <PropertyWrapper>\r\n        <PropertyTitle>\r\n          <Icon iconName=\"TbHash\" size=\"1rem\" /> <span>Tags</span>\r\n        </PropertyTitle>\r\n        <PropertyValue>\r\n          {tags\r\n            ? tags.map(tag => (\r\n                <Tag key={tag} onClick={() => navigate(`/tags/${tag}/`)}>\r\n                  {tag}\r\n                </Tag>\r\n              ))\r\n            : \"-\"}\r\n        </PropertyValue>\r\n      </PropertyWrapper>\r\n    </PropertyConatainer>\r\n  )\r\n}\r\n\r\nexport default Property\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport Icon from \"../Icon/index.jsx\"\r\nimport Property from \"./Property/index.jsx\"\r\n\r\nconst MainIcon = styled(Icon)`\r\n  margin-top: 5.75rem;\r\n  padding: 0.25rem;\r\n  color: ${props => props.theme.icon};\r\n`\r\n\r\nconst Title = styled.h1`\r\n  margin-top: 2.625rem;\r\n  margin-bottom: 0.5rem;\r\n  font-weight: 700;\r\n  font-size: 2.5rem;\r\n  line-height: 1.2;\r\n  padding: 0 0.125rem;\r\n  color: ${props => props.theme.text};\r\n  white-space: pre-wrap;\r\n  word-break: break-word;\r\n`\r\n\r\nconst Callout = styled.div`\r\n  width: 100%;\r\n  padding: 1rem 1rem 1rem 0.75rem;\r\n  margin: 0.25rem 0;\r\n  border-radius: 0.25rem;\r\n  border: ${props => props.theme.calloutBorder};\r\n  color: ${props => props.theme.icon};\r\n  background-color: transparent;\r\n  display: flex;\r\n  flex-direction: row;\r\n  white-space: pre-wrap;\r\n  word-break: break-word;\r\n  flex-shrink: 0;\r\n  flex-grow: 0;\r\n`\r\n\r\nconst CalloutTextWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-width: 0px;\r\n  width: 100%;\r\n  padding: 0 0.125rem;\r\n  margin-left: 0.5rem;\r\n  color: ${props => props.theme.text};\r\n  line-height: 1.5;\r\n  text-align: left;\r\n`\r\n\r\nconst MainTitle = ({ type, title, description, icon, date, tags, series }) => {\r\n  return (\r\n    <>\r\n      <MainIcon iconName={icon} size=\"4.875rem\" />\r\n      <Title>{title}</Title>\r\n      {type === \"main\" && (\r\n        <Callout>\r\n          <Icon iconName=\"TbCode\" size=\"1.5rem\" />\r\n          <CalloutTextWrapper>{description}</CalloutTextWrapper>\r\n        </Callout>\r\n      )}\r\n      {type === \"post\" && <Property date={date} tags={tags} series={series} />}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MainTitle\r\n","import React from \"react\"\r\nimport MainTitle from \"../components/MainTitle\"\r\nimport { graphql } from \"gatsby\"\r\nimport Database from \"../components/Database\"\r\n\r\nconst SeriesPage = ({ data }) => {\r\n  const seriesList = data.allMarkdownRemark.group\r\n  return (\r\n    <>\r\n      <MainTitle\r\n        type=\"main\"\r\n        title=\"Series\"\r\n        description={`${seriesList.length} series to dive into in this blog.`}\r\n        icon=\"TbLayoutList\"\r\n      />\r\n      <Database data={seriesList} series />\r\n    </>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allMarkdownRemark {\r\n      group(field: { frontmatter: { series: SELECT } }) {\r\n        fieldValue\r\n        totalCount\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default SeriesPage\r\n"],"names":["TabBarWrapper","styled","div","withConfig","displayName","componentId","props","theme","tabBar","TabWrapper","$isSelected","tabBarSelected","TabButton","button","text","weekText","buttonHover","buttonActive","_ref","isGridView","changeToGrid","changeToList","isSeries","React","role","onClick","Icon","iconName","size","CardWrapper","cardShadow","cardBackground","cardHover","cardActive","CardThumbnail","background","Title","p","InfoWrapper","InfoText","TagsWrapper","Tag","tag","to","title","date","icon","tags","detail","navigate","map","key","event","handleTagClicked","stopPropagation","maxLength","length","slice","BlockWrapper","a","weekIcon","span","post","as","Link","NoResult","searchText","blue","main","series","h2","GridWrapper","ListWrapper","data","seriesPost","setIsGridView","useState","visibleBlock","setVisibleBlock","dataProps","setDataProps","observerRef","useRef","useEffect","observer","IntersectionObserver","entries","isIntersecting","prevCount","Math","min","root","rootMargin","threshold","currentObserver","current","observe","unobserve","updatedBlockProps","item","fieldValue","totalCount","node","id","fields","slug","frontmatter","Date","toLocaleDateString","excerpt","TabBar","NoData","CardBlock","ListBlock","ref","style","height","marginBottom","PropertyConatainer","divider","PropertyWrapper","PropertyTitle","PropertyValue","PropertyLink","$isActive","author","MainIcon","h1","Callout","calloutBorder","CalloutTextWrapper","type","description","Property","seriesList","allMarkdownRemark","group","MainTitle","Database"],"sourceRoot":""}